import{Ab as u,Ba as x,M as d,R as g,Xa as a,Ya as c,bb as y,ia as h,ib as l,p,q as m,ua as E,xb as v,za as f,zb as I}from"./chunk-QRMUB6RP.js";var D=class o{checkboxChange=I();onCheckboxChange(t){this.checkboxChange.emit(t.target.checked)}static \u0275fac=function(e){return new(e||o)};static \u0275cmp=f({type:o,selectors:[["list-switch"]],outputs:{checkboxChange:"checkboxChange"},decls:8,vars:0,consts:[[1,"rounded-box","border","p-4","flex","items-center","justify-around","gap-4"],[1,"text-lg","font-semibold"],[1,"font-bold","m-0"],["type","checkbox","aria-label","Toggle between monthly and annually",1,"toggle","toggle-xl",3,"change"]],template:function(e,r){e&1&&(a(0,"fieldset",0)(1,"legend",1),l(2,"Expenses options"),c(),a(3,"p",2),l(4,"Monthly"),c(),a(5,"input",3),y("change",function(i){return r.onCheckboxChange(i)}),c(),a(6,"p",2),l(7,"Annually"),c()())},encapsulation:2})};var w=class o{el=g(h);render=g(E);limitImport=u(500);amountImport=u.required();currencyImport=u("EUR");constructor(){v(()=>{let t=this.limitImport(),e=this.amountImport(),r=this.currencyImport(),n=new Intl.NumberFormat("en-UK",{style:"currency",currency:r}).format(e),i=e>t?`<b class="badge badge-dash badge-warning bg-warning text-warning-content">${n}</b>`:n;this.render.setProperty(this.el.nativeElement,"innerHTML",i)})}ngOnDestroy(){this.el.nativeElement.innerHTML=""}static \u0275fac=function(e){return new(e||o)};static \u0275dir=x({type:o,selectors:[["","AppHighlightBig",""]],inputs:{limitImport:[1,"limitImport"],amountImport:[1,"amountImport"],currencyImport:[1,"currencyImport"]}})};var C=class o{getExpenses$(t,e,r,n){let i=m([e,t]).pipe(p(([s,b])=>n(s,b)));return m([i,r]).pipe(this.list_map())}getExpensesKey$(t,e){return m([t,e]).pipe(this.list_map()).pipe(p(n=>{let i=Object.keys(n);return e.value?i.sort((s,b)=>parseInt(b)-parseInt(s)):i.sort()}))}getExpensesTotalImport$(t){return t.pipe(p(e=>{let r={};for(let n in e)r[n]=e[n].reduce((i,s)=>i+s.import,0);return r}))}list_map(){return p(([t,e])=>{let r={};for(let n=0;n<t.length;n++){let i=this.getGroupKey(t[n],e);r[i]||(r[i]=[]),r[i].push(t[n])}return r})}getGroupKey(t,e){return e?t.date.getFullYear().toString():t.date.toLocaleString("default",{month:"long"})}static \u0275fac=function(e){return new(e||o)};static \u0275prov=d({token:o,factory:o.\u0275fac,providedIn:"root"})};export{D as a,w as b,C as c};
